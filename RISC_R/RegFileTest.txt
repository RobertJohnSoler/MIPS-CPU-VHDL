library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use IEEE.STD_LOGIC_ARITH.all;
use IEEE.MATH_REAL.all;

entity regFileTest is
--  Port ( );
end regFileTest;

architecture Behavioral of regFileTest is

    component RegFile is 
    port (readReg1 : in std_logic_vector (4 downto 0);
          readReg2 : in std_logic_vector (4 downto 0);
          writeReg : in std_logic_vector (4 downto 0);
          writeData : in std_logic_vector (31 downto 0);
          regWrite, clk : in std_logic;
          readData1 : out std_logic_vector (31 downto 0);
          readData2 : out std_logic_vector (31 downto 0)
          );
     end component;
     
     signal reg1, reg2, writeReg: std_logic_vector (4 downto 0):= (others => '0');
     signal writeData: std_logic_vector(31 downto 0) := (others => '0');
     signal write, clk: std_logic := '0';
     signal data1, data2: std_logic_vector(31 downto 0);
     
begin
     uut: RegFile port map (readReg1=>reg1, readReg2=>reg2, writeReg=>writeReg, writeData=>writeData, 
                            regWrite=>write, clk=>clk, readData1=>data1, readData2=>data2);
     
     stim_proc: process
     begin
         write <= '1';
         writeReg <= conv_std_logic_vector(20, 5);
         writeData <= X"ffffffff";
         clk <= '1';
         wait for 1 ps;
         clk <= '0';
         wait for 1 ps;
         for i in 0 to 29 loop
            reg1 <= conv_std_logic_vector(i, 5);
            reg2 <= conv_std_logic_vector(i+2, 5);
            clk <= '1';
            wait for 1 ps;
            clk <= '0';
            wait for 1 ps;
         end loop;
         wait;
     end process;
end Behavioral;
